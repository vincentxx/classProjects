(load "hw4.lsp")

(print 'testCase1)
(my_length nil)
(my_length '(b (a b c)) )
(my_length '(a (((b))) c))
(my_length '(a b c))
(print 'endCase1)

(print 'TestCase2)
(my_memq 'a nil)
(my_memq 'b '(a b c) )
(my_memq 'd '(a b c d e f g) )
(my_memq 'd '(a b c d) )
(my_memq 'd '(a b c) )
(print 'endCase2)

(print 'TestCase3)
(my_append '(a b c) '(d e f))
(my_append '((a) (b) (c)) '((d) (e) (f)))
(my_append nil '(d e f)) 
(my_append '(a b c) nil) 
(print 'endCase3)

(print 'TestCase4)
(my_attach 'a nil) 
(my_attach 'd '(a b c)) 
(my_attach '(a) '(b c))
(print 'endCase4)

(print 'TestCase5)
(my_assoc 'a nil) 
(my_assoc 'a '((a . b)(c e f)(b)))
(my_assoc 'c '((a . b)(c e f)(b))) 
(my_assoc 'b '((a . b)(c e f)(b)))
(my_assoc 'f '((a . b)(c e f)(b)))
(print 'endCase5)

(print 'TestCase6)
(freq  'c '((a c) c e))
(freq  'f '(((s) o ) d)) 
(freq  'f '(((f) f) f f)) 
(print 'endCase6)

(print 'TestCase7)
(mapping '((35 kim) (67 clinton) (45 emma))  40)
(mapping '((24 a) (15 b) (56 c) (19 d)) 26) 
(mapping '((90 a) (80 b) (70 c))  40)  
(print 'endCase7)

(print 'TestCase8)
(my_last 'a '((a b)))
(my_last 'a '(a b c a b c a b c d e f g))
(my_last 'b '(a b c a b c a b c d e f g))
(my_last 'c '(a b c a b c a b c d e f g))
(my_last 'g '(a b c a b c a b c d e f g))
(my_last 'h '(a b c a b c a b c d e f g))
(print 'endCase8)

(print 'TestCase9)
(my_reverse nil)  
(my_reverse '(a))   
(my_reverse '(1 2 3 4 5))
(my_reverse '((1 2 3) 4 ((5 6))))  
(print 'endCase9)

(print 'TestCase10)
(is_pattern? '(a b s) '(c d b a s))
(is_pattern? '(c a c) '(b a j a c a c t u s)) 
(is_pattern? nil '(a n y l i s t))
(is_pattern? '(l i s p) nil)
(print 'endCase10)

(print 'TestCase11)
(first_atom nil)
(first_atom '((2 (1) 4) 6)) 
(first_atom '((((s)) o )))
(first_atom '(1 (((2)) 3 4)))
(print 'endCase11)

(print 'TestCase12)
(find_all 'a nil)             
(find_all 'a '(b a c a e))    
(find_all 'a '(b d c e))      
(find_all 'a '(b (a a) c))    
(find_all 'a '((b a) ((c a b)))) 
(print 'endCase12)

(print 'quiz)
(cons_cell '(a b c))
(cons_cell '( (a b) (c d) (e.f)) )

